from vk_api.bot_longpoll import VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

from base.vk_bot import Bot
from base.vk_base import longpoll
from other.send_message import send_message
from other.start import start
from games.choosing import game_choosing
from games.game_1 import create_mini_game_1
from other.menu_exit import menu_exit
from games.game_2 import create_mini_game_2
from other.error import command_error
from accepts.user_accept import user_response_accept
from other.quotes_search import quotes_search


def main():
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.from_user:
            user_id = event.obj.message['from_id']
            text = event.obj.message['text']

            # –ó–Ω–∞–∫–æ–º–∏–º—Å—è —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            start(user_id, text)
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            bot = Bot()
            # –í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ
            if text == '–ú–∏–Ω–∏-–ò–≥—Ä–∞üé≤':

                game = game_choosing(user_id)

                if game == '–£–≥–∞–¥–∞–π –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ':
                    create_mini_game_1(user_id)

                    menu_exit(user_id)

                elif game == '–£–≥–∞–¥–∞–π –¥–∞—Ç—É –Ω–∞–ø–∏—Å–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è':
                    create_mini_game_2(user_id)

                    menu_exit(user_id)

                else:
                    command_error(user_id)

                    menu_exit(user_id)

            elif text == '–ù–∞–π—Ç–∏ —Ñ—Ä–∞–≥–º–µ–Ω—Ç —Ç–µ–∫—Å—Ç–∞üì∞':
                keyboard = VkKeyboard(one_time=True)
                keyboard.add_button('–ù–∞–π—Ç–∏ —Ü–∏—Ç–∞—Ç—ã', VkKeyboardColor.POSITIVE)
                send_message(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', keyboard)

                text, _ = user_response_accept()

                if text == '–ù–∞–π—Ç–∏ —Ü–∏—Ç–∞—Ç—ã':
                    send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω—É–∂–Ω–æ–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ ilibrary.ru'
                                          '\n–°—Å—ã–ª–∫–∞ –¥–æ–ª–∂–Ω–∞ –∏–º–µ—Ç—å —Ñ–æ—Ä–º–∞—Ç:'
                                          ' https://ilibrary.ru/text/ID_–¢–ï–ö–°–¢–ê/index.html')

                    url, _ = user_response_accept()
                    bot.url = url
                    send_message(user_id, '–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏—Å–∫–æ–º–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞')

                    name, _ = user_response_accept()
                    try:
                        quotes_search(bot, name, user_id)
                    except BaseException:
                        keyboard = VkKeyboard(one_time=True)
                        keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é', VkKeyboardColor.NEGATIVE)
                        send_message(user_id, '&#9940;–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...', keyboard)

                    menu_exit(user_id)

                else:
                    command_error(user_id)

                    menu_exit(user_id)

            elif text == '–ù–∞—á–∞—Ç—å':
                pass

            else:
                command_error(user_id)

                menu_exit(user_id)


if __name__ == '__main__':
    main()
